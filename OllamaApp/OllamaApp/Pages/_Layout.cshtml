@using Microsoft.AspNetCore.Components.Web
@namespace OllamaApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OllamaApp</title>

    <base href="~/" />

    <component type="typeof(HeadOutlet)" render-mode="Server" />
    <!-- Material CSS -->
    <link href="css/material/material.min.css" rel="stylesheet">

    <!-- Add Material font (Roboto) and Material icon as needed -->
    <link
        href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i|Roboto+Mono:300,400,700|Roboto+Slab:300,400,700"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <link href="_content/Blazorise/blazorise.min.css?v=1.6.0.0" rel="stylesheet" />
    <link href="_content/Blazorise.Material/blazorise.material.css" rel="stylesheet" />
    <link href="_content/Blazorise.Icons.Material/blazorise.icons.material.css" rel="stylesheet" />

    <link href="OllamaApp.Styles.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/blazor-ui.css" />
    <link href="_content/Blazorise.SpinKit/blazorise.spinkit.css" rel="stylesheet" />
    <script src="_content/Blazorise.Animate/blazorise.animate.js?v=1.7.0.0"></script>
    <link href="_content/Blazorise.LoadingIndicator/blazorise.loadingindicator.css" rel="stylesheet" />

</head>

<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="js/material/material.min.js"></script>
    <script src="_framework/blazor.server.js"></script>
    <script>
        window.myComponent = {
            configureQuillJs: () => {
                var link = Quill.import("formats/link");

                link.sanitize = url => {
                    let newUrl = window.decodeURIComponent(url);
                    newUrl = newUrl.trim().replace(/\s/g, "");

                    if (/^(:\/\/)/.test(newUrl)) {
                        return `http${newUrl}`;
                    }

                    if (!/^(f|ht)tps?:\/\//i.test(newUrl)) {
                        return `http://${newUrl}`;
                    }

                    return newUrl;
                }
            }
        }
    </script>
</body>

</html>
